
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Load environment variables
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

// Check if environment variables are loaded and valid
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error(
    'Supabase configuration error: Missing VITE_SUPABASE_URL or VITE_SUPABASE_ANON_KEY in .env file.'
  );
}

// Validate URL before creating client
const isValidUrl = (url: string) => {
  try {
    new URL(url);
    return true;
  } catch (e) {
    return false;
  }
};

// Default URL to use if environment variable is missing or invalid
const DEFAULT_SUPABASE_URL = 'https://prcneielcpgqwzayekbc.supabase.co';

// Use default URL if environment variable is missing or invalid
const effectiveSupabaseUrl = (SUPABASE_URL && isValidUrl(SUPABASE_URL)) 
  ? SUPABASE_URL 
  : DEFAULT_SUPABASE_URL;

// Use empty string as fallback for anon key if missing
const effectiveSupabaseKey = SUPABASE_PUBLISHABLE_KEY || '';

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  effectiveSupabaseUrl,
  effectiveSupabaseKey,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true
    }
  }
);

// Add debug flag to help with troubleshooting
if (import.meta.env.DEV) {
  console.log('Supabase client initialized with URL:', effectiveSupabaseUrl ? 'Valid URL' : 'Missing URL');
  
  // Check for existing session on init
  supabase.auth.getSession().then(({ data }) => {
    if (data.session) {
      console.log('Existing session found at initialization');
    } else {
      console.log('No session found at initialization');
    }
  });
}
