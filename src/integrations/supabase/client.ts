
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Load environment variables
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

// Check if environment variables are loaded
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error(
    'Supabase URL or Anon Key is missing. Make sure to set VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY in your .env file.'
  );
  // Optionally throw an error or handle this case appropriately
  // throw new Error('Supabase environment variables are not set.');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL || '', // Provide fallback to satisfy TS, but error is logged above
  SUPABASE_PUBLISHABLE_KEY || '', // Provide fallback
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true
    }
  }
);

// Add debug flag to help with troubleshooting
if (import.meta.env.DEV) {
  console.log('Supabase client initialized with URL:', SUPABASE_URL ? 'Valid URL' : 'Missing URL');
  
  // Check for existing session on init
  supabase.auth.getSession().then(({ data }) => {
    if (data.session) {
      console.log('Existing session found at initialization');
    } else {
      console.log('No session found at initialization');
    }
  });
}
